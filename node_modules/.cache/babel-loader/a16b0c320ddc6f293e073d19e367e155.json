{"ast":null,"code":"var _jsxFileName = \"/Users/charlesphillips/berg/sixth-st-coding-challenge/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoListElement({\n  id,\n  text,\n  completed,\n  toggleCompleted\n}) {\n  function handleChange() {\n    toggleCompleted(id);\n  }\n  let completed_text;\n  if (completed) {\n    completed_text = \"Completed\";\n  } else {\n    completed_text = \"In Progress\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: toggleCompleted(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), id, \" \", text, \" \", completed_text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoListElement;\nfunction ToDoList() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctor Appointment\",\n    completed: true\n  }, {\n    id: 2,\n    text: \"Meeting at School\",\n    completed: false\n  }]);\n  function toggleCompleted(id) {\n    console.log(\"WHAT\");\n    setTasks(tasks.map(task => {\n      console.log(task);\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n  }\n  function addTask(text) {\n    const t = {\n      id: tasks.length + 1,\n      text: text,\n      completed: false\n    };\n    setTasks([t, ...tasks]);\n    setText(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(ToDoListElement, {\n      id: task.id,\n      text: task.text,\n      completed: task.completed,\n      toggleCompleted: toggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"JDaf0mktC5Iw5+jzpMWJvJEF/hA=\");\n_c2 = ToDoList;\nexport default ToDoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToDoListElement\");\n$RefreshReg$(_c2, \"ToDoList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ToDoListElement","id","text","completed","toggleCompleted","handleChange","completed_text","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToDoList","_s","setText","tasks","setTasks","console","log","map","task","addTask","t","length","value","e","target","onClick","_c2","$RefreshReg$"],"sources":["/Users/charlesphillips/berg/sixth-st-coding-challenge/src/components/ToDoList.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction ToDoListElement({ id, text, completed, toggleCompleted }) {\n  function handleChange() {\n    toggleCompleted(id);\n  }\n  let completed_text;\n  if (completed) {\n    completed_text = \"Completed\";\n  } else {\n    completed_text = \"In Progress\";\n  }\n  return (\n    <div>\n      {/* <button onClick={() => deleteTask(id)}>Add</button> */}\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={toggleCompleted(id)}\n      />\n      {id} {text} {completed_text}\n    </div>\n  );\n}\n\nfunction ToDoList() {\n  const [text, setText] = useState(\"\");\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctor Appointment\",\n      completed: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      completed: false,\n    },\n  ]);\n  function toggleCompleted(id) {\n    console.log(\"WHAT\");\n    setTasks(\n      tasks.map((task) => {\n        console.log(task);\n        if (task.id === id) {\n          return { ...task, completed: !task.completed };\n        } else {\n          return task;\n        }\n      })\n    );\n  }\n\n  function addTask(text) {\n    const t = { id: tasks.length + 1, text: text, completed: false };\n    setTasks([t, ...tasks]);\n    setText(\"\");\n  }\n\n  return (\n    <div>\n      <input value={text} onChange={(e) => setText(e.target.value)} />\n      <button onClick={() => addTask(text)}>Add</button>\n      {tasks.map((task) => (\n        <ToDoListElement\n          id={task.id}\n          text={task.text}\n          completed={task.completed}\n          toggleCompleted={toggleCompleted}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}