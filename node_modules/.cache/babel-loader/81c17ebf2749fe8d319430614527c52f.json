{"ast":null,"code":"var _jsxFileName = \"/Users/charlesphillips/berg/sixth-st-coding-challenge/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoListElement({\n  id,\n  text,\n  completed,\n  toggleCompleted\n}) {\n  // const [status, setStatus] = useState(completed)\n  function handleChange() {\n    toggleCompleted(id);\n    // setStatus(!completed)\n  }\n  let completed_text;\n  if (completed) {\n    completed_text = \"Completed\";\n  } else {\n    completed_text = \"In Progress\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), id, \" \", text, \" \", completed_text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_c = ToDoListElement;\nfunction ToDoList() {\n  _s();\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        console.log(\"HI\");\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n    }));\n  }\n  ;\n  const [text, setText] = useState(\"\");\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appointment',\n    completed: true,\n    toggleCompleted: toggleCompleted\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    completed: false,\n    toggleCompleted: toggleCompleted\n  }]);\n  function addTask(text) {\n    const t = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([t, ...tasks]);\n    setText(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 2\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(ToDoListElement, {\n      id: task.id,\n      text: task.text,\n      completed: task.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(ToDoList, \"CpTcXDiaGFUUm7ZJsn61DkD9EWI=\");\n_c2 = ToDoList;\nexport default ToDoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToDoListElement\");\n$RefreshReg$(_c2, \"ToDoList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ToDoListElement","id","text","completed","toggleCompleted","handleChange","completed_text","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToDoList","_s","setTasks","tasks","map","task","console","log","setText","addTask","t","Date","now","value","e","target","onClick","_c2","$RefreshReg$"],"sources":["/Users/charlesphillips/berg/sixth-st-coding-challenge/src/components/ToDoList.js"],"sourcesContent":["import {useState} from \"react\"\n\nfunction ToDoListElement({\n    id,\n    text,\n    completed,\n    toggleCompleted,\n}){\n    // const [status, setStatus] = useState(completed)\n    function handleChange() {\n        toggleCompleted(id);\n        // setStatus(!completed)\n        }\n    let completed_text\n    if (completed){\n        completed_text = \"Completed\";}\n    else{\n        completed_text = \"In Progress\";\n    }\n    return <div>\n        <input \n type=\"checkbox\"\n checked={completed}\n onChange={handleChange}\n />\n        {id} {text} {completed_text}\n    </div>\n}\n\nfunction ToDoList(){\n    function toggleCompleted(id){\n        setTasks(\n            tasks.map(task => {\n                if(task.id === id){\n                    console.log(\"HI\");\n                    return {...task, completed: !task.completed};\n                }\n\n            })\n        )\n    };\n    const [text, setText] = useState(\"\")\n    const [tasks, setTasks] = useState([\n        {\n        id: 1,\n        text: 'Doctor Appointment',\n        completed: true,\n        toggleCompleted: toggleCompleted\n        },\n        {\n        id: 2,\n        text: 'Meeting at School',\n        completed: false,\n        toggleCompleted: toggleCompleted,\n        \n        }\n        ]);\n\n\n    \n\n\n        \n    function addTask(text){\n        const t = {id: Date.now(), text,completed:false}\n        setTasks([t,...tasks])\n        setText(\"\")\n    }\n        \n    return <div>\n        <input\n value={text}\n onChange={e => setText(e.target.value)} \n />\n <button onClick={() => addTask(text)}>Add</button>\n        {\n        tasks.map(task =><ToDoListElement id={task.id} text={task.text} completed={task.completed} />)}\n        </div>;\n\n    \n}\n\nexport default ToDoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}